{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/dakshpushpad/Documents/GitHub/GitFlow/src/env.js"],"sourcesContent":["import { createEnv } from \"@t3-oss/env-nextjs\";\nimport { z } from \"zod\";\n\nexport const env = createEnv({\n  /**\n   * Specify your server-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars.\n   */\n  server: {\n    DATABASE_URL: z.string().url(),\n    NODE_ENV: z\n      .enum([\"development\", \"test\", \"production\"])\n      .default(\"development\"),\n  },\n\n  /**\n   * Specify your client-side environment variables schema here. This way you can ensure the app\n   * isn't built with invalid env vars. To expose them to the client, prefix them with\n   * `NEXT_PUBLIC_`.\n   */\n  client: {\n    // NEXT_PUBLIC_CLIENTVAR: z.string(),\n  },\n\n  /**\n   * You can't destruct `process.env` as a regular object in the Next.js edge runtimes (e.g.\n   * middlewares) or client-side so we need to destruct manually.\n   */\n  runtimeEnv: {\n    DATABASE_URL: process.env.DATABASE_URL,\n    NODE_ENV: process.env.NODE_ENV,\n    // NEXT_PUBLIC_CLIENTVAR: process.env.NEXT_PUBLIC_CLIENTVAR,\n  },\n  /**\n   * Run `build` or `dev` with `SKIP_ENV_VALIDATION` to skip env validation. This is especially\n   * useful for Docker builds.\n   */\n  skipValidation: !!process.env.SKIP_ENV_VALIDATION,\n  /**\n   * Makes it so that empty strings are treated as undefined. `SOME_VAR: z.string()` and\n   * `SOME_VAR=''` will throw an error.\n   */\n  emptyStringAsUndefined: true,\n});\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,MAAM,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD,EAAE;IAC3B;;;GAGC,GACD,QAAQ;QACN,cAAc,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG;QAC5B,UAAU,oIAAA,CAAA,IAAC,CACR,IAAI,CAAC;YAAC;YAAe;YAAQ;SAAa,EAC1C,OAAO,CAAC;IACb;IAEA;;;;GAIC,GACD,QAAQ;IAER;IAEA;;;GAGC,GACD,YAAY;QACV,cAAc,QAAQ,GAAG,CAAC,YAAY;QACtC,QAAQ;IAEV;IACA;;;GAGC,GACD,gBAAgB,CAAC,CAAC,QAAQ,GAAG,CAAC,mBAAmB;IACjD;;;GAGC,GACD,wBAAwB;AAC1B"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///Users/dakshpushpad/Documents/GitHub/GitFlow/src/server/db.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nimport { env } from \"@/env\";\n\nconst createPrismaClient = () =>\n  new PrismaClient({\n    log:\n      env.NODE_ENV === \"development\" ? [\"query\", \"error\", \"warn\"] : [\"error\"],\n  });\n\nconst globalForPrisma = globalThis as unknown as {\n  prisma: ReturnType<typeof createPrismaClient> | undefined;\n};\n\nexport const db = globalForPrisma.prisma ?? createPrismaClient();\n\nif (env.NODE_ENV !== \"production\") globalForPrisma.prisma = db;\n"],"names":[],"mappings":";;;AAAA;AAEA;;;AAEA,MAAM,qBAAqB,IACzB,IAAI,6HAAA,CAAA,eAAY,CAAC;QACf,KACE,0GAAA,CAAA,MAAG,CAAC,QAAQ,KAAK,gBAAgB;YAAC;YAAS;YAAS;SAAO,GAAG;YAAC;SAAQ;IAC3E;AAEF,MAAM,kBAAkB;AAIjB,MAAM,KAAK,gBAAgB,MAAM,IAAI;AAE5C,IAAI,0GAAA,CAAA,MAAG,CAAC,QAAQ,KAAK,cAAc,gBAAgB,MAAM,GAAG"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file:///Users/dakshpushpad/Documents/GitHub/GitFlow/src/app/sync-user/page.tsx"],"sourcesContent":["import { db } from '@/server/db';\nimport { auth, clerkClient } from '@clerk/nextjs/server'\nimport { notFound, redirect } from 'next/navigation';\nimport React from 'react'\n\nconst SyncUser = async () => {\n    const { userId } = await auth();\n    if(!userId) {\n        throw new Error('User not found');\n    }\n\n    const client = await clerkClient();\n    const user = await client.users.getUser(userId);\n\n    if(!user.emailAddresses[0]?.emailAddress) {\n        return notFound();\n    }\n  \n    await db.user.upsert({\n    where: {\n        emailAddress: user.emailAddresses[0]?.emailAddress ?? \"\"\n    },\n    update: {\n        imageUrl: user.imageUrl,\n        firstName: user.firstName,\n        lastName: user.lastName,\n    },\n    create: {\n        id: userId,\n        emailAddress: user.emailAddresses[0]?.emailAddress ?? \"\",\n        imageUrl: user.imageUrl,\n        firstName: user.firstName,\n        lastName: user.lastName,\n    }\n    })\n    return redirect('/dashboard')\n}\n\nexport default SyncUser"],"names":[],"mappings":";;;AAAA;AAEA;AADA;AAAA;AACA;;;;AAGA,MAAM,WAAW;IACb,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAA,GAAA,mLAAA,CAAA,OAAI,AAAD;IAC5B,IAAG,CAAC,QAAQ;QACR,MAAM,IAAI,MAAM;IACpB;IAEA,MAAM,SAAS,MAAM,CAAA,GAAA,yKAAA,CAAA,cAAW,AAAD;IAC/B,MAAM,OAAO,MAAM,OAAO,KAAK,CAAC,OAAO,CAAC;IAExC,IAAG,CAAC,KAAK,cAAc,CAAC,EAAE,EAAE,cAAc;QACtC,OAAO,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IAClB;IAEA,MAAM,mHAAA,CAAA,KAAE,CAAC,IAAI,CAAC,MAAM,CAAC;QACrB,OAAO;YACH,cAAc,KAAK,cAAc,CAAC,EAAE,EAAE,gBAAgB;QAC1D;QACA,QAAQ;YACJ,UAAU,KAAK,QAAQ;YACvB,WAAW,KAAK,SAAS;YACzB,UAAU,KAAK,QAAQ;QAC3B;QACA,QAAQ;YACJ,IAAI;YACJ,cAAc,KAAK,cAAc,CAAC,EAAE,EAAE,gBAAgB;YACtD,UAAU,KAAK,QAAQ;YACvB,WAAW,KAAK,SAAS;YACzB,UAAU,KAAK,QAAQ;QAC3B;IACA;IACA,OAAO,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;AACpB;uCAEe"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}